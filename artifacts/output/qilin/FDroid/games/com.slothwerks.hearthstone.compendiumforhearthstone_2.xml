<?xml version="1.0" encoding="UTF-8"?><DataFlowResults FileFormatVersion="102" TerminationState="Success"><Results><Result><Sink Statement="staticinvoke &lt;android.util.Log: int d(java.lang.String,java.lang.String)&gt;(&quot;Deck&quot;, $r4)" Method="&lt;com.slothwerks.hearthstone.compendiumforhearthstone.models.Deck: com.slothwerks.hearthstone.compendiumforhearthstone.models.Deck fromDeckerinoFormat(android.content.Context,java.lang.String)&gt;"><AccessPath Value="$r4" Type="java.lang.String" TaintSubFields="true"></AccessPath></Sink><Sources><Source Statement="$r3 = interfaceinvoke $r1.&lt;android.database.Cursor: java.lang.String getString(int)&gt;($i0)" Method="&lt;com.slothwerks.hearthstone.compendiumforhearthstone.models.Deck: com.slothwerks.hearthstone.compendiumforhearthstone.models.Deck fromCursor(android.content.Context,android.database.Cursor,boolean)&gt;"><AccessPath Value="$r3" Type="java.lang.String" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="$z0 = virtualinvoke r0.&lt;de.greenrobot.event.HandlerPoster: boolean sendMessage(android.os.Message)&gt;($r5)" Method="&lt;de.greenrobot.event.HandlerPoster: void enqueue(de.greenrobot.event.Subscription,java.lang.Object)&gt;"><AccessPath Value="r0" Type="de.greenrobot.event.HandlerPoster" TaintSubFields="true"><Fields><Field Value="&lt;de.greenrobot.event.HandlerPoster: de.greenrobot.event.EventBus eventBus&gt;" Type="de.greenrobot.event.EventBus"></Field><Field Value="&lt;de.greenrobot.event.EventBus: java.util.Map subscriptionsByEventType&gt;" Type="java.util.Map"></Field><Field Value="&lt;java.util.Map: java.lang.Object[] values&gt;" Type="java.lang.Object[]"></Field></Fields></AccessPath></Sink><Sources><Source Statement="$r3 = interfaceinvoke $r1.&lt;android.database.Cursor: java.lang.String getString(int)&gt;($i0)" Method="&lt;com.slothwerks.hearthstone.compendiumforhearthstone.models.Deck: com.slothwerks.hearthstone.compendiumforhearthstone.models.Deck fromCursor(android.content.Context,android.database.Cursor,boolean)&gt;"><AccessPath Value="$r3" Type="java.lang.String" TaintSubFields="true"></AccessPath></Source><Source Statement="$r3 = interfaceinvoke $r1.&lt;android.database.Cursor: java.lang.String getString(int)&gt;($i0)" Method="&lt;com.slothwerks.hearthstone.compendiumforhearthstone.models.Deck: com.slothwerks.hearthstone.compendiumforhearthstone.models.Deck fromCursor(android.content.Context,android.database.Cursor,boolean)&gt;"><AccessPath Value="$r3" Type="java.lang.String" TaintSubFields="true"></AccessPath></Source><Source Statement="$r2 = interfaceinvoke $r0.&lt;android.database.Cursor: java.lang.String getString(int)&gt;($i0)" Method="&lt;com.slothwerks.hearthstone.compendiumforhearthstone.data.database.CardDbAdapter: com.slothwerks.hearthstone.compendiumforhearthstone.models.Card cursorToCard(android.database.Cursor)&gt;"><AccessPath Value="$r2" Type="java.lang.String" TaintSubFields="true"></AccessPath></Source><Source Statement="$r2 = interfaceinvoke $r0.&lt;android.database.Cursor: java.lang.String getString(int)&gt;($i0)" Method="&lt;com.slothwerks.hearthstone.compendiumforhearthstone.data.database.CardDbAdapter: com.slothwerks.hearthstone.compendiumforhearthstone.models.Card cursorToCard(android.database.Cursor)&gt;"><AccessPath Value="$r2" Type="java.lang.String" TaintSubFields="true"></AccessPath></Source></Sources></Result></Results><PerformanceData><PerformanceEntry Name="CallgraphConstructionSeconds" Value="3"></PerformanceEntry><PerformanceEntry Name="TaintPropagationSeconds" Value="54"></PerformanceEntry><PerformanceEntry Name="PathReconstructionSeconds" Value="1"></PerformanceEntry><PerformanceEntry Name="TotalRuntimeSeconds" Value="58"></PerformanceEntry><PerformanceEntry Name="MaxMemoryConsumption" Value="1812"></PerformanceEntry><PerformanceEntry Name="SourceCount" Value="10"></PerformanceEntry><PerformanceEntry Name="SinkCount" Value="17"></PerformanceEntry></PerformanceData></DataFlowResults>